// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test case "added-symbol" 1`] = `
{
  "messages": [],
  "minChangeType": "none",
}
`;

exports[`Test case "namespace-to-object-type" 1`] = `
{
  "messages": [
    "[literal-type-changed] Export "F" symbol changed from { a: 5, b: 5 } to { a: number, b: number }",
    "[symbol-kind-changed] Export "F" symbol has changed (namespace, class, interface, or function).",
  ],
  "minChangeType": "major",
}
`;

exports[`Test case "removed-symbol" 1`] = `
{
  "messages": [
    "[symbol-name-removed] Export "Bar" was removed from the target",
  ],
  "minChangeType": "major",
}
`;

exports[`Test case "symbol-add-export-type" 1`] = `
{
  "messages": [
    "[literal-type-changed] Export "F" symbol changed from any to F",
    "[symbol-kind-changed] Export "F" symbol kind changed from a non-type symbol to a type symbol",
    "[symbol-kind-changed] Export "F" symbol has changed (namespace, class, interface, or function).",
  ],
  "minChangeType": "major",
}
`;

exports[`Test case "symbol-add-export-value" 1`] = `
{
  "messages": [
    "[symbol-kind-changed] Export "F" symbol kind changed from a non-value symbol to a value symbol",
    "[symbol-kind-changed] Export "F" symbol has changed (namespace, class, interface, or function).",
  ],
  "minChangeType": "major",
}
`;

exports[`Test case "symbol-class-to-interface" 1`] = `
{
  "messages": [
    "[symbol-kind-changed] Export "Foo" symbol kind changed from a value symbol to a non-value symbol",
    "[symbol-kind-changed] Export "Foo" symbol has changed (namespace, class, interface, or function).",
  ],
  "minChangeType": "major",
}
`;

exports[`Test case "symbol-class-to-type" 1`] = `
{
  "messages": [
    "[symbol-kind-changed] Export "Foo" symbol kind changed from a value symbol to a non-value symbol",
  ],
  "minChangeType": "major",
}
`;

exports[`Test case "symbol-class-to-value-only" 1`] = `
{
  "messages": [
    "[object-type-properties-changed] Property "a" has been removed from "Foo",
    "[symbol-kind-changed] Export "Foo" symbol kind changed from a type symbol to a non-type symbol",
    "[user-constructible-required-properties-added] New required property "prototype" has been added to "Foo"",
  ],
  "minChangeType": "major",
}
`;

exports[`Test case "symbol-interface-to-type" 1`] = `
{
  "messages": [
    "[symbol-kind-changed] Export "Foo" symbol has changed (namespace, class, interface, or function).",
  ],
  "minChangeType": "major",
}
`;
