// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test case "args-changed" 1`] = `
{
  "diff": "Index: patch
===================================================================
--- patch
+++ patch
@@ -1,1 +1,1 @@
-export function acceptsValue(data: number): void {}
+export function acceptsValue(data: { count: number }): void {}
",
  "minChangeType": "major",
}
`;

exports[`Test case "args-narrowed" 1`] = `
{
  "diff": "Index: patch
===================================================================
--- patch
+++ patch
@@ -1,1 +1,1 @@
-export function acceptsValue(data: string | number): void {}
+export function acceptsValue(data: number): void {}
",
  "minChangeType": "major",
}
`;

exports[`Test case "args-newly-required" 1`] = `
{
  "diff": "Index: patch
===================================================================
--- patch
+++ patch
@@ -1,1 +1,1 @@
-export function myFunction(a: string) {}
+export function myFunction(a: string, newlyRequired: string) {}
",
  "minChangeType": "major",
}
`;

exports[`Test case "args-removed" 1`] = `
{
  "diff": "Index: patch
===================================================================
--- patch
+++ patch
@@ -1,1 +1,1 @@
-export function myFunction(a: string, removed: number) {}
+export function myFunction(a: string) {}
",
  "minChangeType": "none",
}
`;

exports[`Test case "function-to-arrow-function" 1`] = `
{
  "diff": "Index: patch
===================================================================
--- patch
+++ patch
@@ -1,1 +1,1 @@
-export function myFunction(a: string, b: number) {}
+export const myFunction = (a: string, b: number) => {};
",
  "minChangeType": "major",
}
`;

exports[`Test case "returns-widened" 1`] = `
{
  "diff": "Index: patch
===================================================================
--- patch
+++ patch
@@ -1,3 +1,7 @@
-export function getValue(): string {
-  return "hello";
+export function getValue(): string | null {
+  if (Math.random() > 0.5) {
+    return "hello";
+  }
+
+  return null;
 }
",
  "minChangeType": "major",
}
`;
